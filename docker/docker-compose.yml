services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        WWWUSER: 1000
        WWWGROUP: 1000
    restart: unless-stopped
    depends_on:
      - mysql
    volumes:
      - ../:/var/www/html
    expose:
      - "9000"
    networks:
      - appnet

  nginx:
    image: nginx:stable
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ../:/var/www/html:ro
      - ./certificates:/etc/letsencrypt:ro
    depends_on:
      - app
    networks:
      - appnet

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    expose:
      - "3306"
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    expose:
      - "6379"
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mysql-data:
  redis-data:

networks:
  appnet:
    driver: bridge
