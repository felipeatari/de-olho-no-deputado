# Com SSL

# Redireciona acessos por IP para HTTPS no domínio
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://domain.com.br$request_uri;
}

# Redireciona HTTP para HTTPS no domínio
server {
    listen 80;
    listen [::]:80;
    server_name domain.com.br www.domain.com.br;

    root /var/www/html/public;

    location /.well-known/acme-challenge/ {
        try_files $uri $uri/ =404;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS principal
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cricode.site www.cricode.site;

    root /var/www/html/public;

    ssl_certificate /etc/letsencrypt/live/cricode.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cricode.site/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";

    index index.php;
    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ ^/index\.php(/|$) {
        fastcgi_pass app:9000;  # <--- aqui o nome do container PHP-FPM na rede Docker
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}
